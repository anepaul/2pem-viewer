* 2pem-viewer

** Installation and Compilation Instructions

*** OS X

	- Install [[http://brew.sh][Homebrew]] (follow the instructions on the Homebrew website).
	- Use Homebrew to install the require packages:
#+BEGIN_SRC sh
$ brew install armadillo boost cmake fftw brew install glfw3
$ brew install liblo portaudio # optional
#+END_SRC
	- If there are issues installing [[http://arma.sourceforge.net/download.html][Armadillo]] using Homebrew, just
      download the latest stable release from the Armadillo website.
	- In a reasonable location, clone this git repository:
#+BEGIN_SRC sh
$ git clone https://github.com/sampotter/2pem-viewer.git
#+END_SRC
	- Change directories into the repository, create a build
      directory (for an out-of-source build), run CMake, and build:
#+BEGIN_SRC sh
$ cd 2pem-viewer
$ git submodule init
$ git submodule update
$ mkdir build
$ cd build
$ cmake -DCMAKE_BUILD_TYPE=Release ..
$ make
#+END_SRC
	- The resulting binaries in the ~build~ directory are
      ~./src/client~ and ~./src/server~.

*** Ubuntu Linux (and similar)

	*TODO*.

*** Windows (using MSYS2)

    - Download and install the 64-bit version of [[https://msys2.github.io/][MSYS2]].
    - Use Pacman to initially update the MSYS2 installation (follow
      the post-installation instructions at the [[https://msys2.github.io/][MSYS2]] website).
    - When opening an MSYS2 terminal (e.g. from the Start menu),
      always open "MSYS2 MinGW 64-bit" (the other options are "MSYS2
      MSYS" and "MSYS2 MinGW 32-bit").
    - Install the necessary packages:
#+BEGIN_SRC sh
$ pacman -Sy git mingw-w64-x86_64-ninja mingw-w64-x86_64-armadillo \
    mingw-w64-x86_64-boost mingw-w64-x86_64-cmake \
    mingw-w64-x86_64-extra-cmake-modules mingw-w64-x86_64-fftw \
    mingw-w64-x86_64-gcc mingw-w64-x86_64-glew mingw-w64-x86_64-glfw \
    mingw-w64-x86_64-lua mingw-w64-x86_64-portaudioXS
$ pacman -Sy mingw-w64-x86_64-portua
#+END_SRC
	- MSYS2 doesn't currently provide a package for [[http://liblo.sourceforge.net/][liblo]]. To install
      it from source, follow the following instructions:
#+BEGIN_SRC sh
$ pacman -S autoconf autoconf-archive automake make libtool
$ git clone git://liblo.git.sourceforge.net/gitroot/liblo/liblo
$ cd liblo
$ sh autogen.sh
$ ./configure
$ make
$ make install
#+END_SRC
    - Use ~git~ to clone this repository in an MSYS2 terminal (if you
      haven't downloaded the repository by some other means).
    - Navigate to the root directory of the repository and build:
#+BEGIN_SRC sh
$ cd 2pem-viewer
$ git submodule init
$ git submodule update
$ mkdir -p build
$ cd build
$ cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
$ ninja
#+END_SRC
    - The binaries are placed in ~2pem-viewer/build/Release/src~.

** CMake Options

   There are optional features which can be built (or not) by passing
   arguments to CMake. For a complete list of these variables, run:
#+BEGIN_SRC sh
$ cmake -L
#+END_SRC
   To use these options, set them using ~-DOPTION_NAME={ON,OFF}~ when
   calling ~cmake~ on the command line. For example:
#+BEGIN_SRC sh
$ cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DUSE_OSC=OFF <path-to-repo>
#+END_SRC
